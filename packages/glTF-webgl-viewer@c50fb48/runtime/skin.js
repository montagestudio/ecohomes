require("runtime/dependencies/gl-matrix");var Base=require("runtime/base").Base,Transform=require("runtime/transform").Transform,Utilities=require("runtime/utilities").Utilities;exports.Skin=Object.create(Object.prototype,{jointsIds:{value:null,writable:!0},nodesForSkeleton:{value:null,writable:!0},bindShapeMatrix:{value:null,writable:!0},inverseBindMatricesDescription:{value:null,writable:!0},matricesForSkeleton:{value:null,writable:!0},sources:{value:null,writable:!0},init:{value:function(){return this.jointsIds=[],this.nodesForSkeleton={},this.matricesForSkeleton={},this.sources=[],this}},inverseBindMatricesDelegate:{value:{handleError:function(e,t){console.log("ERROR:vertexAttributeBufferDelegate:"+e+" :"+t)},convert:function(e,t){return new Float32Array(e)},resourceAvailable:function(e,t){}}},process:{value:function(e,t){var r=Object.keys(this.nodesForSkeleton),i=mat4.create();mat4.inverse(e.worldTransform,i),r.forEach(function(e){var r=this.nodesForSkeleton[e],a=this.matricesForSkeleton[e];if(!a){var n=16*this.jointsIds.length;a=new Float32Array(n),this.matricesForSkeleton[e]=a;for(var s=mat4.identity(),o=0;o<n;o++)a[o]=s[o%16]}var l=t.getResource(this.inverseBindMatricesDescription,this.inverseBindMatricesDelegate);l&&this.sources.forEach(function(e){for(var t=e,n=this.bindShapeMatrix,s=this.jointsIds.length,o=mat4.create(),u=0;u<s;u++){for(var c=0;c<16;c++)o[c]=l[16*u+c];var m=r[u].worldTransform,v=mat4.identity();mat4.multiply(v,i),mat4.multiply(v,m),mat4.multiply(v,o),mat4.multiply(v,n);for(var c=0;c<16;c++)a[16*u+c]=v[c]}t.primitives.forEach(function(e){e.material.parameters&&(e.material.parameters.jointMat.value=a)},this)},this)},this)}}});