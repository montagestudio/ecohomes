montageDefine("c50fb48","runtime/scene-renderer",{dependencies:["runtime/dependencies/gl-matrix","runtime/technique","runtime/pass","runtime/builtin-assets"],factory:function(e,n,r){e("runtime/dependencies/gl-matrix");var t=e("runtime/technique").Technique,s=e("runtime/pass").ScenePass,i=e("runtime/builtin-assets").BuiltInAssets;n.SceneRenderer=Object.create(Object.prototype,{loadPickingTechnique:{value:function(){var e=this,n=i.assetWithName("pickingTechnique");n.then(function(n){e.technique.rootPass.sceneRenderer.pickingTechnique=n},function(e){},function(e){})}},createTechniqueIfNeeded:{value:function(){if(!this._technique){this._technique=Object.create(t).init();var e=Object.create(s).init();this._technique.passes={defaultPass:e}}}},_webGLRenderer:{value:null,writable:!0},_technique:{value:null,writable:!0},technique:{get:function(){return this._technique},set:function(e){this._technique=e}},compressedMeshDelegate:{value:{handleError:function(e,n){console.log("ERROR:vertexAttributeBufferDelegate:"+e+" :"+n)},decompressAttribsInner_:function(e,n,r,t,s,i,c,a){for(var o=0,u=n;u<r;u++){var h=e.charCodeAt(u);o+=h>>1^-(1&h),t[s]=a*(o+c),s+=i}},decompressIndices_:function(e,n,r,t,s){for(var i=0,c=0;c<r;c++){var a=e.charCodeAt(n++);t[s++]=i-a,0==a&&i++}},decompressMesh:function(e,n,r,t){for(var s=r.decodeScales.length,i=r.decodeOffsets,c=r.decodeScales,a=n.attribRange[0],o=n.attribRange[1],u=a,h=new Float32Array(s*o),d=0;d<s;d++){var l=u+o,f=c[d];f&&this.decompressAttribsInner_(e,u,l,h,d,s,i[d],f),u=l}var m=(n.indexRange[0],3*n.indexRange[1]),E=new Uint16Array(m);this.decompressIndices_(e,u,m,E,0),t(h,E,null,n)},convert:function(e,n){var r=n.mesh.compression;if("won-compression"==r.type){var t=r.indexRange;if(t){t[0]+3*t[1];this.decompressMesh(e,r,r,function(e,r,t,s){n.renderer.setupCompressedMesh(n.mesh,e,r)})}}else{var s=Module.testDecode(e),i=0,c=0;n.mesh;r.compressedData&&(c=r.compressedData.verticesCount,i=r.compressedData.indicesCount/3);for(var a=new ArrayBuffer(s.length),o=new Uint8Array(a),u=0,h=s.length;u<h;u++)o[u]=s.charCodeAt(u);var d=new Uint16Array(a,0,3*i),l=a.slice(Uint16Array.BYTES_PER_ELEMENT*i*3,Uint16Array.BYTES_PER_ELEMENT*i*3+Float32Array.BYTES_PER_ELEMENT*c*3),f=new Float32Array(l),m=Uint16Array.BYTES_PER_ELEMENT*i*3+Float32Array.BYTES_PER_ELEMENT*c*3,E=a.slice(m,m+Float32Array.BYTES_PER_ELEMENT*c*3),p=new Float32Array(E),_=m+Float32Array.BYTES_PER_ELEMENT*c*3,v=a.slice(_,_+Float32Array.BYTES_PER_ELEMENT*c*2),R=new Float32Array(v);n.renderer.setupCompressedMesh2(n.mesh,c,f,p,R,d)}return e},resourceAvailable:function(e,n){}}},scene:{get:function(){return this.technique.rootPass.scene},set:function(e){var n=this,r=this.technique.rootPass.scene;r!=e&&(this.technique.rootPass.scene=e,this.scene.rootNode.apply(function(e,r,t){e.meshes&&e.meshes.forEach(function(e){if(e.compression){var r="text";e.compression.compressedData.mode&&"binary"==e.compression.compressedData.mode&&(r="arraybuffer"),e.compression.compressedData.requestType=r,n.webGLRenderer.resourceManager.getResource(e.compression.compressedData,n.compressedMeshDelegate,{mesh:e,renderer:n.webGLRenderer})}},this)},!0,null))}},webGLRenderer:{get:function(){return this._webGLRenderer},set:function(e){this._webGLRenderer=e}},init:{value:function(e,n){return this.webGLRenderer=e,this.createTechniqueIfNeeded(),this.loadPickingTechnique(),this}},render:{value:function(e,n){this.technique&&this.technique.execute(this.webGLRenderer,e,n)}}})}});