require("runtime/dependencies/gl-matrix");var glTFParser=require("runtime/glTF-parser").glTFParser,ResourceDescription=require("runtime/resource-description").ResourceDescription,Technique=require("runtime/technique").Technique,ProgramPass=require("runtime/pass").ProgramPass,Pass=require("runtime/pass").Pass,ScenePass=require("runtime/pass").ScenePass,GLSLProgram=require("runtime/glsl-program").GLSLProgram,glTFMaterial=require("runtime/glTF-material").glTFMaterial,Mesh=require("runtime/mesh").Mesh,glTFNode=require("runtime/glTF-node").glTFNode,Primitive=require("runtime/primitive").Primitive,Projection=require("runtime/projection").Projection,Camera=require("runtime/camera").Camera,Skin=require("runtime/skin").Skin,glTFScene=require("runtime/glTF-scene").glTFScene,Transform=require("runtime/transform").Transform,Animation=require("runtime/animation").Animation,AnimationManager=require("runtime/animation-manager").AnimationManager;exports.RuntimeTFLoader=Object.create(glTFParser,{_materials:{writable:!0,value:null},_scenes:{writable:!0,value:null},_animations:{writable:!0,value:null},totalBufferSize:{value:0,writable:!0},handleBuffer:{value:function(e,t,r){var i=Object.create(ResourceDescription).init(e,t);return i.id=e,this.storeEntry(e,i,t),this.totalBufferSize+=t.byteLength,t.type="arraybuffer",!0}},handleBufferView:{value:function(e,t,r){var i=Object.create(ResourceDescription).init(e,t);i.id=e;var n=this.getEntry(i.description.buffer);return t.type="ArrayBufferView",i.buffer=n,this.storeEntry(e,i,t),!0}},handleShader:{value:function(e,t,r){var i=Object.create(ResourceDescription).init(e,t);return i.id=e,i.type="shader",this.storeEntry(e,i,t),!0}},handleProgram:{value:function(e,t,r){var i=Object.create(ResourceDescription).init(e,t);i.id=e,i.type="program";var n=this.getEntry(i.description.vertexShader),s=this.getEntry(i.description.fragmentShader);return i[GLSLProgram.VERTEX_SHADER]=n.entry,i[GLSLProgram.FRAGMENT_SHADER]=s.entry,this.storeEntry(e,i,t),!0}},handleImage:{value:function(e,t,r){var i=t.path,n=Object.create(ResourceDescription).init(i,{path:i});return n.type="image",this.storeEntry(e,n,t),!0}},handleVideo:{value:function(e,t,r){var i=t.path,n=Object.create(ResourceDescription).init(i,{path:i});return n.type="video",this.storeEntry(e,n,t),!0}},handleTechnique:{value:function(e,t,r){var i=Object.create(Technique);i.id=e;var n=this.storeEntry(e,i,t),s=t.pass;i.passName=s;var a=t.passes;if(!a)return console.log("ERROR: technique does not contain pass"),!1;var o={},c=Object.keys(t.passes);return c.forEach(function(e){var t=a[e],r=t.instanceProgram;if(!r)return console.log("ERROR: A Pass with type=program must have a program property"),!1;var i=(new ProgramPass).init();i.id=n+"_"+s,i.instanceProgram=t.instanceProgram,i.instanceProgram.program=this.getEntry(r.program).entry,i.states=t.states,o[e]=i},this),i.parameters=t.parameters,i.passes=o,!0}},handleMaterial:{value:function(e,t,r){var i=Object.create(glTFMaterial).init(e);this.storeEntry(e,i,t);var n=t.instanceTechnique,s=n.values;i.name=t.name;var a=this.getEntry(n.technique);if(!a)return console.log("ERROR: invalid file, cannot find referenced technique:"+t.technique),!1;i.technique=a.entry;var o=i.technique.parameters;return i.parameters=JSON.parse(JSON.stringify(o)),s&&s.forEach(function(e){var t=o[e.parameter];if(t){var r=null;switch(t.type){case"SAMPLER_CUBE":case"SAMPLER_2D":var n=this.getEntry(e.value);n?(e.value=n.entry,r=e):console.log("ERROR: can't find texture:"+e.value);break;default:r=e}}i.parameters[e.parameter]=r},this),this._materials||(this._materials=[]),this._materials.push(i),!0}},handleLight:{value:function(e,t,r){return!0}},handleAttribute:{value:function(e,t,r){var i=this.getEntry(t.bufferView);t.bufferView=i.entry,t.byteOffset||(t.byteOffset=0),this.storeEntry(e,t,t)}},handleIndices:{value:function(e,t,r){t.id=e;var i=this.getEntry(t.bufferView);t.bufferView=i.entry,this.storeEntry(e,t,t)}},handleMesh:{value:function(e,t,r){var i=Object.create(Mesh).init();i.id=e,i.name=t.name;var n=!1,s=t.extensions;s&&(s["won-compression"]&&(n=!0,i.compression=s["won-compression"],i.compression.type="won-compression",i.compression.compressedData.bufferView=this.getEntry(i.compression.compressedData.bufferView).entry,i.compression.compressedData.id=e+"_compressedData"),s["Open3DGC-compression"]&&(n=!0,i.compression=s["Open3DGC-compression"],i.compression.type="Open3DGC-compression",i.compression.compressedData.bufferView=this.getEntry(i.compression.compressedData.bufferView).entry,i.compression.compressedData.id=e+"_compressedData")),this.storeEntry(e,i,t);var a=t[Mesh.PRIMITIVES];if(!a)return console.log("MISSING_PRIMITIVES for mesh:"+e),!1;for(var o=0;o<a.length;o++){var c=a[o];if("TRIANGLES"===c.primitive){var u=Object.create(Primitive).init(),h=this.getEntry(c.material);u.material=h.entry,i.primitives.push(u);var l=c.semantics,m=Object.keys(l);m.forEach(function(e){var t=l[e],r=this.getEntry(t);u.addVertexAttribute({semantic:e,attribute:r.entry})},this);var d=c.indices,p=this.getEntry(d);u.indices=p.entry}}return!0}},handleCamera:{value:function(e,t,r){var i=Object.create(Camera).init();i.id=e,this.storeEntry(e,i,t);var n=Object.create(Projection);return n.initWithDescription(t),i.projection=n,!0}},handleLight:{value:function(e,t,r){return!0}},buildNodeHirerachy:{value:function(e){var t=e.entry,r=e.description.children;r&&r.forEach(function(e){var r=this.getEntry(e),i=r.entry;null==i.parent?t.children.push(i):t.children.push(i.copy()),this.buildNodeHirerachy(r)},this)}},resolveParameterSources:{value:function(){this._materials&&this._materials.forEach(function(e){if(e.parameters){var t=Object.keys(e.parameters);t.forEach(function(t){var r=e.parameters[t];r&&r.source&&(r.source=this.getEntry(r.source).entry)},this)}},this)}},buildSkeletons:{value:function(e){if(e.instanceSkin){var t=e.instanceSkin.skin;if(t){e.instanceSkin.skeletons.forEach(function(e){var r=this.getEntry(e);if(r){var i=r.entry,n=t.jointsIds,s=[];n.forEach(function(t){var r=i.nodeWithJointID(t);r?s.push(r):console.log("WARNING: jointId:"+t+" cannot be found in skeleton:"+e)},this),t.nodesForSkeleton[e]=s}},this);var r=[];e.instanceSkin.sources.forEach(function(e){var t=this.getEntry(e);t&&r.push(t.entry)},this),t.sources=r}}var i=e.children;i&&i.forEach(function(e){this.buildSkeletons(e)},this)}},handleScene:{value:function(e,t,r){if(this._scenes||(this._scenes=[]),!t.nodes)return console.log("ERROR: invalid file required nodes property is missing from scene"),!1;var i=Object.create(glTFScene).init();i.ids=this._ids,i.id=e,i.name=t.name,i.baseURL=this.baseURL,this.storeEntry(e,i,t);var n=Object.create(glTFNode).init();return t.nodes&&t.nodes.forEach(function(e){var t=this.getEntry(e);n.children.push(t.entry),this.buildNodeHirerachy(t)},this),this.resolveParameterSources(),this.buildSkeletons(n),i.rootNode=n,this._scenes.push(i),!0}},handleSkin:{value:function(e,t,r){var i=Object.create(Skin).init();i.bindShapeMatrix=mat4.create(t.bindShapeMatrix),i.jointsIds=t.joints,i.inverseBindMatricesDescription=t.inverseBindMatrices,i.inverseBindMatricesDescription.id=e+"_inverseBindMatrices",i.inverseBindMatricesDescription.bufferView=this.getEntry(i.inverseBindMatricesDescription.bufferView).entry,this.storeEntry(e,i,t)}},handleNode:{value:function(e,t,r){var i=Object.create(glTFNode).init();i.id=e,i.jointId=t.jointId,i.name=t.name,this.storeEntry(e,i,t),i.transform=Object.create(Transform).initWithDescription(t);var n;if(t.mesh&&(n=this.getEntry(t.mesh),i.meshes.push(n.entry)),t.meshes&&t.meshes.forEach(function(e){n=this.getEntry(e),n&&i.meshes.push(n.entry)},this),t.camera){var s=this.getEntry(t.camera);s&&i.cameras.push(s.entry)}if(t.instanceSkin){t.instanceSkin.skin=this.getEntry(t.instanceSkin.skin).entry,i.instanceSkin=t.instanceSkin;var a=i.instanceSkin.sources;a&&a.forEach(function(e){n=this.getEntry(e),n&&i.meshes.push(n.entry)},this)}return!0}},handleLoadCompleted:{value:function(e){if(this.delegate){var t=null;if(this._state.options&&(t=this._state.options.ids),t)t.forEach(function(e){var t=this.getEntry(e);t&&this.delegate.loadCompleted(t.entry)},this);else if(this._scenes&&this.delegate&&this._scenes.length>0){var r=Object.create(AnimationManager).init();r.animations=this._animations,this._scenes[0].animationManager=r,this.delegate.loadCompleted(this._scenes[0])}}}},handleAnimation:{value:function(e,t,r){this._animations||(this._animations=[]);var i=Object.create(Animation).initWithDescription(t);i.id=e,this.storeEntry(e,i,t);var n={};Object.keys(t.parameters).forEach(function(e){var r=t.parameters[e];switch(r.type){case"FLOAT_VEC4":componentsPerAttribute=4;break;case"FLOAT_VEC3":componentsPerAttribute=3;break;case"FLOAT_VEC2":componentsPerAttribute=2;break;case"FLOAT":componentsPerAttribute=1;break;default:console.log("type:"+r.type+" byteStride not handled")}r.byteStride=4*componentsPerAttribute,r.componentsPerAttribute=componentsPerAttribute,r.bufferView=this.getEntry(r.bufferView).entry,r.id=i.id+e,n[e]=r},this),i.parameters=n,i.channels.forEach(function(e){var t=e.target.id;e.path=e.target.path,e.target=this.getEntry(t).entry},this),Object.keys(i.samplers).forEach(function(e){var r=t.samplers[e],s=i.samplers[e],a=r.input,o=r.output;s.input=n[a],s.output=n[o]},this),this._animations.push(i)}},handleTexture:{value:function(e,t,r){if(t.source&&t.sampler)t.type="texture",t.source=this.getEntry(t.source).entry,t.sampler=this.getEntry(t.sampler).entry,t.id=e,this.storeEntry(e,t,t);else if(t.sources&&t.sampler){t.type="texture";for(var i=0;i<t.sources.length;i++)t.sources[i]=this.getEntry(t.sources[i]).entry;t.sampler=this.getEntry(t.sampler).entry,t.id=e,this.storeEntry(e,t,t)}else console.log("ERROR: texture"+e+" must contain both source and sampler properties")}},handleSampler:{value:function(e,t,r){t.id=t,this.storeEntry(e,t,t)}},handleError:{value:function(e){}},_delegate:{value:null,writable:!0},delegate:{enumerable:!0,get:function(){return this._delegate},set:function(e){this._delegate=e}},_entries:{enumerable:!1,value:null,writable:!0},removeAllEntries:{value:function(){this._entries={}}},containsEntry:{enumerable:!1,value:function(e){return!!this._entries&&!!this._entries[e]}},storeEntry:{enumerable:!1,value:function(e,t,r){return null==this._entries&&(this._entries={}),null==this._ids&&(this._ids={}),t.baseId=e,this._ids[e]=t,(e+=this.loaderContext())?(t.id=e,this.containsEntry[e]&&console.log("WARNING: entry:"+e+" is already stored, overriding"),this._entries[e]={id:e,entry:t,description:r},e):void console.log("ERROR: not id provided, cannot store")}},getEntry:{enumerable:!1,value:function(e){return e+=this.loaderContext(),this._entries?this._entries[e]:null}}});