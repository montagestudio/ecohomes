require("runtime/dependencies/gl-matrix");var Technique=require("runtime/technique").Technique,ScenePass=require("runtime/pass").ScenePass,BuiltInAssets=require("runtime/builtin-assets").BuiltInAssets;exports.SceneRenderer=Object.create(Object.prototype,{loadPickingTechnique:{value:function(){var e=this,r=BuiltInAssets.assetWithName("pickingTechnique");r.then(function(r){e.technique.rootPass.sceneRenderer.pickingTechnique=r},function(e){},function(e){})}},createTechniqueIfNeeded:{value:function(){if(!this._technique){this._technique=Object.create(Technique).init();var e=Object.create(ScenePass).init();this._technique.passes={defaultPass:e}}}},_webGLRenderer:{value:null,writable:!0},_technique:{value:null,writable:!0},technique:{get:function(){return this._technique},set:function(e){this._technique=e}},compressedMeshDelegate:{value:{handleError:function(e,r){console.log("ERROR:vertexAttributeBufferDelegate:"+e+" :"+r)},decompressAttribsInner_:function(e,r,t,n,s,i,c,a){for(var o=0,u=r;u<t;u++){var h=e.charCodeAt(u);o+=h>>1^-(1&h),n[s]=a*(o+c),s+=i}},decompressIndices_:function(e,r,t,n,s){for(var i=0,c=0;c<t;c++){var a=e.charCodeAt(r++);n[s++]=i-a,0==a&&i++}},decompressMesh:function(e,r,t,n){for(var s=t.decodeScales.length,i=t.decodeOffsets,c=t.decodeScales,a=r.attribRange[0],o=r.attribRange[1],u=a,h=new Float32Array(s*o),d=0;d<s;d++){var l=u+o,E=c[d];E&&this.decompressAttribsInner_(e,u,l,h,d,s,i[d],E),u=l}var f=(r.indexRange[0],3*r.indexRange[1]),m=new Uint16Array(f);this.decompressIndices_(e,u,f,m,0),n(h,m,null,r)},convert:function(e,r){var t=r.mesh.compression;if("won-compression"==t.type){var n=t.indexRange;if(n){n[0]+3*n[1];this.decompressMesh(e,t,t,function(e,t,n,s){r.renderer.setupCompressedMesh(r.mesh,e,t)})}}else{var s=Module.testDecode(e),i=0,c=0;r.mesh;t.compressedData&&(c=t.compressedData.verticesCount,i=t.compressedData.indicesCount/3);for(var a=new ArrayBuffer(s.length),o=new Uint8Array(a),u=0,h=s.length;u<h;u++)o[u]=s.charCodeAt(u);var d=new Uint16Array(a,0,3*i),l=a.slice(Uint16Array.BYTES_PER_ELEMENT*i*3,Uint16Array.BYTES_PER_ELEMENT*i*3+Float32Array.BYTES_PER_ELEMENT*c*3),E=new Float32Array(l),f=Uint16Array.BYTES_PER_ELEMENT*i*3+Float32Array.BYTES_PER_ELEMENT*c*3,m=a.slice(f,f+Float32Array.BYTES_PER_ELEMENT*c*3),p=new Float32Array(m),_=f+Float32Array.BYTES_PER_ELEMENT*c*3,q=a.slice(_,_+Float32Array.BYTES_PER_ELEMENT*c*2),v=new Float32Array(q);r.renderer.setupCompressedMesh2(r.mesh,c,E,p,v,d)}return e},resourceAvailable:function(e,r){}}},scene:{get:function(){return this.technique.rootPass.scene},set:function(e){var r=this,t=this.technique.rootPass.scene;t!=e&&(this.technique.rootPass.scene=e,this.scene.rootNode.apply(function(e,t,n){e.meshes&&e.meshes.forEach(function(e){if(e.compression){var t="text";e.compression.compressedData.mode&&"binary"==e.compression.compressedData.mode&&(t="arraybuffer"),e.compression.compressedData.requestType=t,r.webGLRenderer.resourceManager.getResource(e.compression.compressedData,r.compressedMeshDelegate,{mesh:e,renderer:r.webGLRenderer})}},this)},!0,null))}},webGLRenderer:{get:function(){return this._webGLRenderer},set:function(e){this._webGLRenderer=e}},init:{value:function(e,r){return this.webGLRenderer=e,this.createTechniqueIfNeeded(),this.loadPickingTechnique(),this}},render:{value:function(e,r){this.technique&&this.technique.execute(this.webGLRenderer,e,r)}}});