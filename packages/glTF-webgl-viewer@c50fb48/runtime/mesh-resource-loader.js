var ResourceLoader=require("runtime/resource-loader").ResourceLoader;exports.MeshResourceLoader=Object.create(ResourceLoader,{meshes:{value:null,writable:!0},fireMeshesDidLoadIfNeeded:{value:function(){var e=Object.keys(this._trackedIds);e&&0==e.length&&this.delegate&&this.delegate.meshesDidLoad&&this.delegate.meshesDidLoad(this.meshes)}},resourceAvailable:{value:function(e){this._removeTrackedId(e),this.fireMeshesDidLoadIfNeeded()}},_fetchResources:{value:function(e,r,t){var s=this.webGLRenderer.webGLContext;e.webGLContext=s;var i=Object.keys(r);i.forEach(function(i){var a=this.webGLRenderer.resourceManager.getResource(r[i],e,null==t?s:r[i]);null==a&&this._addTrackedId(i)},this)}},_fetchAllResources:{value:function(e){this.webGLRenderer.webGLContext;this._fetchResources(this.webGLRenderer.vertexAttributeBufferDelegate,e.vertexBuffers,!0),this._fetchResources(this.webGLRenderer.indicesDelegate,e.allIndices),this._fetchResources(this.webGLRenderer.textureDelegate,e.textures),this._fetchResources(this.webGLRenderer.programDelegate,e.programs),this.fireMeshesDidLoadIfNeeded()}},_trackProgramsFromMaterial:{value:function(e,r){var t=e.technique;if(t)for(var s in t.passes){var i=t.passes[s],a=i.instanceProgram;a&&(r[a.program.id]=a.program,this._addTrackedId(a.program.id))}}},_trackTexturesFromMaterial:{value:function(e,r){var t=e.parameters;if(t){var s=Object.keys(t);s.length>0&&s.forEach(function(e){var s=t[e];if(s&&s.value){var i=s.value;"texture"===i.type&&(r[i.id]=i,this._addTrackedId(i.id))}},this)}}},_trackIndicesFromPrimitive:{value:function(e,r){var t=e.indices;r[t.id]=t,this._addTrackedId(t.id)}},_trackVertexBuffersFromPrimitive:{value:function(e,r){for(var t in e.semantics){var s=e.semantics[t];r[s.id]=s,this._addTrackedId(s.id)}}},_trackMesh:{value:function(e,r,t){e.primitives.forEach(function(e){this._trackTexturesFromMaterial(e.material,r.textures),this._trackIndicesFromPrimitive(e,r.allIndices),this._trackVertexBuffersFromPrimitive(e,r.vertexBuffers),this._trackProgramsFromMaterial(e.material,r.programs)},this)}},_trackMeshes:{value:function(e){this.meshes.forEach(function(r){this._trackMesh(r,e,this.webGLRenderer)},this)}},loadMeshes:{value:function(){var e={};e.textures={},e.allIndices={},e.vertexBuffers={},e.programs={},this._trackMeshes(e),this._fetchAllResources(e,this.webGLRenderer)}},init:{value:function(e,r,t){return this.delegate=t,this.webGLRenderer=r,this.meshes=e,r.resourceManager.observers.push(this),this}}});