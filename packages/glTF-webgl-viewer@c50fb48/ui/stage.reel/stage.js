var Montage=require("montage").Montage,Component=require("montage/ui/component").Component,RangeController=require("montage/core/range-controller").RangeController,Utilities=require("runtime/utilities").Utilities,Node=require("runtime/node").Node,glTFNode=require("runtime/glTF-node").glTFNode,Camera=require("runtime/camera").Camera,GLSLProgram=require("runtime/glsl-program").GLSLProgram,glMatrix=require("runtime/dependencies/gl-matrix").glMatrix;exports.Stage=Montage.create(Component,{constructor:{value:function(){this["super"](),this.modelsController=(new RangeController).initWithContent([]),this.modelsController.selectAddedContent=!0,this.camerasController=(new RangeController).initWithContent([]),this.camerasController.selectAddedContent=!0,this.defineBinding("model",{"<-":"modelsController.selection.0"}),this.defineBinding("camera",{"<-":"camerasController.selection.0"}),this.addOwnPropertyChangeListener("model",this),this.addOwnPropertyChangeListener("camera",this)}},view:{get:function(){return this.templateObjects?this.templateObjects.view:null}},templateDidLoad:{value:function(){this.view.delegate=this}},enterDocument:{value:function(e){e&&(this.modelsController.content=[{name:"Buggy",path:"model/rambler/Rambler.json"},{name:"duck",path:"model/duck/duck.json"},{name:"SuperMurdoch",path:"model/SuperMurdoch/SuperMurdoch.json"},{name:"Wine",path:"model/wine/wine.json"}],this.modelPath=this.modelsController.content[0].path),this.fillViewport&&window.addEventListener("resize",this,!0)}},exitDocument:{value:function(){this.fillViewport&&window.removeEventListener("resize",this,!0)}},willDraw:{value:function(){this.view.width=this.width=window.innerWidth-270,this.view.height=this.height=window.innerHeight}},bytesLimit:{value:250},concurrentRequests:{value:6},modelPath:{value:null},loadingProgress:{value:0},location:{value:null},_fillViewport:{value:!0},fillViewport:{get:function(){return this._fillViewport},set:function(e){e&&!this._fillViewport?window.addEventListener("resize",this,!0):!e&&this._fillViewport&&window.removeEventListener("resize",this,!0),this._fillViewport=e}},height:{value:null},width:{value:null},captureResize:{value:function(e){this.needsDraw=!0}},handleOptionsReload:{value:function(){this.loadScene()}},handleModelChange:{value:function(){this.run(this.model.path),this.loading=!0}},handleCameraChange:{value:function(e){if(e){var t=Montage.create(Node);t.scene=this.view.scene,t.id=e.node.baseId,this.view.viewPoint=t}}},run:{value:function(e){this.loadScene(),this.view&&(this.view.scenePath=e)}},loadScene:{value:function(){var e=this,t=this.view;t&&t.sceneRenderer&&t.sceneRenderer.scene&&t.sceneRenderer.technique.rootPass.scene.rootNode.apply(function(t,n){return t.meshes&&t.meshes.length&&t.meshes.forEach(function(e){e.loadedPrimitivesCount=0,e.step=0},e),null},!0,null)}},sceneWillChange:{value:function(){var e=this.view.getResourceManager();e&&(this.view.viewPoint=null,e.maxConcurrentRequests=this.concurrentRequests,e.bytesLimit=1024*this.bytesLimit,e.reset())}},sceneDidChange:{value:function(){if(this.view.scene){this.loadScene();var e=this.view.getResourceManager();e&&1===e.observers.length&&e.observers.push(this),this.camerasController.content=[];var t=[];this.view.scene.glTFElement.rootNode.apply(function(e,n,i){return e.cameras&&e.cameras.length&&(t=t.concat(e)),i},!0,null),t.forEach(function(e){this.camerasController.content.push({name:e.name,node:e})},this)}}},resourceAvailable:{value:function(e){e.range&&this.loading&&(this.loadingProgress+=(e.range[1]-e.range[0])/this.view.totalBufferSize*100,this.loadingProgress>=99&&(this.loadingProgress=0,this.loading=!1))}}});